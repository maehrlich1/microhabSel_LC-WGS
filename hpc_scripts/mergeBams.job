#!/bin/bash

#Job Name and array call. Square brackets = array size, % = max. number of jobs to run at a time.
#BSUB -J mergeBams[1-957]%50

#Project
#BSUB -P fun_gen_1

#Queue
#BSUB -q normal

#Cores (Max 40)
#BSUB -n 1

#RAM per node/host (Use M and G for Mb and Gb). The second part forces all cores on the same host.
#BSUB -R "rusage[mem=6G] span[hosts=1]"

#Walltime
#BSUB -W 02:00

#Output File (Absolute path! The -oo option overwrites the the output file. Don't use for array jobs!)
#BSUB -o /home/mae120/logs/microhabSel_LC-WGS/mergeBams.out

###################################################################
#SETUP
#Load Modules
#Change Directory
cd /projects2/rsmas/dcrawford/MAE/microhabSel_LC-WGS/bam

#Extract sample and parameters using job index. Remember to account for the header in the sample table.
SAMPLE_ID=$(awk -v jindex=$LSB_JOBINDEX 'NR==jindex+1 {print $3}' /projects2/rsmas/dcrawford/MAE/microhabSel_LC-WGS/sample_table_2ndStage.tsv)

#Print which sample is being processed in color.
GREEN='\033[32;1m'
COL_RESET='\033[0m'
echo -e "${GREEN}Processing sample ${SAMPLE_ID}${COL_RESET}"

#CODE
#Add Read Group to 1stStage
gatk --java-options -Xmx4g AddOrReplaceReadGroups -I '1stStage/'$SAMPLE_ID'_1stStage.sorted.bam' -O '1stStage/'$SAMPLE_ID'_1stStage.RG.sorted.bam' -RGLB $SAMPLE_ID'_lib1' -RGPL illumina -RGPU GW2011023488th -RGSM $SAMPLE_ID && rm '1stStage/'$SAMPLE_ID'_1stStage.sorted.bam'*

#Add Read Group to 2ndStage
gatk --java-options -Xmx4g AddOrReplaceReadGroups -I '2ndStage/'$SAMPLE_ID'_2ndStage.sorted.bam' -O '2ndStage/'$SAMPLE_ID'_2ndStage.RG.sorted.bam' -RGLB $SAMPLE_ID'_lib1' -RGPL illumina -RGPU GW201223000 -RGSM $SAMPLE_ID && rm '2ndStage/'$SAMPLE_ID'_2ndStage.sorted.bam'*

#Merge Bam Files
gatk --java-options -Xmx4g MergeSamFiles -I '1stStage/'$SAMPLE_ID'_1stStage.RG.sorted.bam' -I '2ndStage/'$SAMPLE_ID'_2ndStage.RG.sorted.bam' -O 'merged/'$SAMPLE_ID'.merged.sorted.bam' --USE_THREADING true