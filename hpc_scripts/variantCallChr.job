#!/bin/bash

#Job Name and array call. Square brackets = array size, % = max. number of jobs to run at a time.
#BSUB -J variantCallChr[1-24]

#Project
#BSUB -P fun_gen_1

#Queue
#BSUB -q normal

#Cores (Max 40)
#BSUB -n 4

#RAM per node/host (Use M and G for Mb and Gb). The second part forces all cores on the same host.
#BSUB -R "rusage[mem=12G] span[hosts=1]"

#Walltime
#BSUB -W 44:00

#Output File (Absolute path! The -oo option overwrites the the output file. BUT this will also overwrite the output of each array element!)
#BSUB -o /home/mae120/logs/microhabSel_LC-WGS/variantCallChr.out

###################################################################
#SETUP
#Load Modules
#Change Directory
cd /projectnb/dcrawford/MAE/microhabSel_LC-WGS/ANGSD/variants

#Extract chromosome from chromosome file using job index.
CHROM=$(awk -v jindex=$LSB_JOBINDEX 'NR==jindex {print $0}' ../chr_only.txt)

#Print which chromosome is being processed in color.
GREEN='\033[32;1m'
COL_RESET='\033[0m'
echo -e "${GREEN}Processing chromosome ${CHROM}${COL_RESET}"

#CODE
angsd -bam ../master_bamlist.txt -ref $REF -out $CHROM -r $CHROM: \
-doCounts 1 -doMajorMinor 1 -doMaf 1 -GL 1 -doGlf 2 \
-minMapQ 20 -baq 2 -minQ 20 \
-minInd 478 -setMaxDepth 1600 \
-SNP_pval 1e-6 -minMaf 0.05 -rmTriallelic 0.05 \
-P 4 #ANGSD only takes a maximum of 8 threads. Due to I/O operations being the bottleneck.
